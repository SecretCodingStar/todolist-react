system env:
vagrant init debian/jessie64
vagrant up

database env:
todo unzip -q todoapp-xxx-SNAPSHOT.jar db/schema.sql
todo unzip -q todoapp-xxx-SNAPSHOT.jar db/rebuild.sh

update service:
ssh nonocast.cn -t todolist-update

todolist
1. 分页
2. 排序
3. 增加用户登录错误提示, 重名判断
4. 用户编辑
5. refactor exception
6. Cacheable - redis

master

v0.1.29
还是DAOAccessException, MySQL 5.7还是有这个问题, 重新增加borrow和validate-query

v0.1.28
server.address=127.0.0.1

v0.1.27
1. 增加todolist-update
    sudo ln -s /home/nonocast/.sdkman/candidates/gradle/current/bin/gradle /usr/bin/gradle
2. 通过ssh nonocast.cn -t todolist-update
    -t是需要模拟tty,用来sudo输入密码

v0.1.26
add task:publish

v0.1.23
再次出现 org.springframework.dao.DataAccessResourceFailureException
说明v0.1.19没有解决此问题
    spring.datasource.test-on-borrow=true
    spring.datasource.validation-query=SELECT 1
ref: http://tomaszdziurko.pl/2010/06/solving-com-mysql-jdbc-exceptions-jdbc4-communicationsexception-in-spring-jdbc-based-application/
mysql升级到5.7直接解决问题!

v0.1.22
fix

v0.1.21
1. 增加Task-User relation
2. 通过@AuthenticationPrincipal返回login user
    public String home(@AuthenticationPrincipal User user)

v0.1.20
1. 增加Task
2. 增加ModelBase

v0.1.19
1. 服务器出现DataAccessResourceFailureException,网上说需要在connection string增加autoReconnect=true, 需要观察

2. 微信套路:
    扫码后得到unionid, 如果user中已有则直接登录,如果没有跳转到/register
    如果填写的邮箱没有则新增用户,如果已有转换为绑定.

v0.1.18
增加了wechatid判定

v0.1.16
fix wechat access

v0.1.15
1. 初步完成wechat接入

v0.1.14
1. fix mysql 中文乱码
2. 增加注册
3. Application获取context
    @Autowired
    private ApplicationContext appContext;
4. 将wechat.json配置放在/etc/todolist/下,读取外部文件进行配置
    Path p = Paths.get(path, "wechat.json");
    String content = new String(Files.readAllBytes(p));
5. 解析外部json
    @Autowired
    private ObjectMapper objectMapper;

    TypeReference<HashMap<String, String>> typeRef = new TypeReference<HashMap<String, String>>() {};
    Map<String,String> settings = objectMapper.readValue(content, typeRef);
6. 增加DBA, 配置数据库, --不合适取消了.
    java -cp build/libs/todoapp-0.1.13-SNAPSHOT.jar cn.nonocast.DBA

    查看jar包中的文件:
    unzip -q -c todoapp-0.1.13-SNAPSHOT.jar META-INF/MANIFEST.MF
    单独extract一个文件:
    unzip -q todoapp-0.1.13-SNAPSHOT.jar META-INF/MANIFEST.MF

unzip -q -c todoapp-x.y.z-SNAPSHOT.jar db/schema.sql
unzip -q -c todoapp-x.y.z-SNAPSHOT.jar db/data.sql

v0.1.13
1. 模拟用户登录
    UserDetails user = userDetailsManager.loadUserByUsername("linda@yahoo.com");
    Authentication auth = new UsernamePasswordAuthenticationToken(user, null, user.getAuthorities());
    SecurityContextHolder.getContext().setAuthentication(auth);
    rememberMeServices.loginSuccess(request, response ,auth);
这是因为wechat login需要单独使用rememberMeServices,所以需要在WebSecurityConfiguration中单独注入rememberMeServices

2. fix logout, 不可以直接使用request.logout(), 这个logout不能清理cookie.
    @RequestMapping("/logout")
    public String logout(HttpServletRequest request, HttpServletResponse response) throws ServletException {
        Authentication auth = SecurityContextHolder.getContext().getAuthentication();
        if (auth != null){
            rememberMeServices.logout(request, response, auth);
            new SecurityContextLogoutHandler().logout(request, response, auth);
        }

        SecurityContextHolder.getContext().setAuthentication(null);
        SecurityContextHolder.clearContext();

        return "redirect:/login?logout";
    }

v0.1.12
1. 外部配置, 增加dev, prod profile.
    System variable: $ java -Dspring.profiles.active='prod' -jar myapp.jar
    Command line argument: $ java -jar myapp.jar --spring.profiles.active='prod'
2. Spring Boot 日志
    logging.path=/var/log/todolist
3. 微信登录, 增加/wechat/callback回调,显示code
4. 增加service
    sudo systemctl daemon-reload

v0.1.11
fix linux systemd service failed. 貌似要去掉devtools.
还需要再验证.

v0.1.10
1. "mail"改为"email"
2. freemarker增加spring.ftl, 完成spring binding
3. 增加用户验证, Valid/Errors
4. admin创建用户,显示错误,返回创建成功页面

v0.1.9
1. freemarker template
2. 增加create_user

v0.1.8
1. 增加todolist数据库schema
    User p = userRepository.findByEmail("nonocast@gmail.com");
    p.setPassword(passwordEncoder.encode("123456"));
    userRepository.save(p);
2. 增加jpa
3. 支持User/UserRepository
4. 增加CustomUserService注入Spring Security
5. 增加BCryptPasswordEncoder

v0.1.7
1. 去掉TodolistApplicationConfiguration中的403 handler.

v0.1.6
1. 替换error page
Whitelabel Error Page出自Spring Boot中的WebMvcAutoConfiguration,
在BasicErrorController中通过RequestMapping判定输出json还是html,
所以在templates下增加error.ftl可以满足基本要求.

v0.1.5 2016/6/26
1. 通过@Value(project.version)获取application.properties
2. build.gradle中通过Properties和PropertiesFile获取application.perperties中版本号

v0.1.4 2016/6/26
1. 增加Spring Boot， Spring Security和Freemarker支持。
2. 增加devtools支持
  1) gradle build --continuous
  2) gradle bootRun
2. 导入到IntelliJ IDEA
  1) create Spring Boot project with SB V1.3 and add "Devtools" (1*) to dependencies
  2) invoke Help->Find Action... and type "Registry", in the dialog search for "automake" and enable the entry "compiler.automake.allow.when.app.running", close dialog
  3) enable background compilation in Settings->Build, Execution, Deployment->Compiler "Make project automatically"

nonocast 创建于 2016/6/25
